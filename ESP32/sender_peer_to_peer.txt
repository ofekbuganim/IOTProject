#include <esp_now.h>
#include <WiFi.h>

// Replace with the actual receiver MAC address (from step 1)
uint8_t receiverMAC[] = {0xCC, 0xDB, 0xA7, 0x5A, 0xAC, 0xA0};  

// Data structure to send
typedef struct struct_message {
  float temperature;
  float humidity;
} struct_message;

struct_message data;

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  if (esp_now_init() != ESP_OK) {
    Serial.println("ESP-NOW initialization failed!");
    return;
  }

  esp_now_peer_info_t peerInfo = {};
  memcpy(peerInfo.peer_addr, receiverMAC, 6);
  peerInfo.channel = 0;  
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Failed to add peer");
    return;
  }

  esp_now_register_send_cb([](const uint8_t *mac, esp_now_send_status_t status) {
    Serial.print("Send status: ");
    Serial.println(status == ESP_NOW_SEND_SUCCESS ? "Success" : "Fail");
  });
}

void loop() {
  // Dummy data â€“ you can later read from sensors
  data.temperature = 22.5;
  data.humidity = 55.3;

  esp_now_send(receiverMAC, (uint8_t *)&data, sizeof(data));
  Serial.println("Data sent");
  delay(2000);
}
