#include <WiFi.h>
#include <HTTPClient.h>
#include <time.h>

// ==== Wi-Fi credentials ====
const char* ssid = "AndroidAP55C0";
const char* password = "nhgs2148";

// ==== Firebase config ====
const char* firebase_project_id = "weather-station-iot-a5c40";
const char* firebase_api_key = "AIzaSyDwduIRpiQTkVHuWjsbeNKSepu0kQ1pwWQ";

// ==== Firestore REST API URL ====
String firestore_url = "https://firestore.googleapis.com/v1/projects/" + String(firebase_project_id) + "/databases/(default)/documents/sensor_data";

// ==== Mock sensor values ====
float temperature = 24.5;
float humidity = 55.0;
float wind_speed = 7.2;
float uv_index = 3.1;
float pressure = 1012.6;
float altitude = 84.2;

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n✅ Connected to WiFi");

  // Set up time for timestamps
  configTime(0, 0, "pool.ntp.org", "time.nist.gov");
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    // Build Firestore JSON payload
    String payload = String("{\"fields\": {") +
      "\"temperature\": {\"doubleValue\": " + String(temperature, 2) + "}," +
      "\"humidity\": {\"doubleValue\": " + String(humidity, 2) + "}," +
      "\"wind_speed\": {\"doubleValue\": " + String(wind_speed, 2) + "}," +
      "\"uv_index\": {\"doubleValue\": " + String(uv_index, 2) + "}," +
      "\"pressure\": {\"doubleValue\": " + String(pressure, 2) + "}," +
      "\"altitude\": {\"doubleValue\": " + String(altitude, 2) + "}," +
      "\"timestamp\": {\"timestampValue\": \"" + getISO8601Time() + "\"}" +
    "}}";

    Serial.println("📤 Sending payload to Firestore:");
    Serial.println(payload);

    http.begin(firestore_url + "?key=" + firebase_api_key);
    http.addHeader("Content-Type", "application/json");
    int response = http.POST(payload);

    Serial.print("📡 Firestore POST status: ");
    Serial.println(response);

    if (response > 0) {
      String responseBody = http.getString();
      Serial.println("📨 Response:");
      Serial.println(responseBody);
    } else {
      Serial.println("❌ Error in sending POST");
    }

    http.end();

    // You can modify the data to simulate changes
    temperature += 0.1;
    humidity -= 0.1;
  } else {
    Serial.println("🚫 WiFi Disconnected");
  }

  delay(10000); // Send every 10 seconds
}

String getISO8601Time() {
  time_t now;
  struct tm timeinfo;
  if (!getLocalTime(&timeinfo)) {
    return "2025-01-01T00:00:00Z";
  }
  char timeString[30];
  strftime(timeString, sizeof(timeString), "%Y-%m-%dT%H:%M:%SZ", &timeinfo);
  return String(timeString);
}
